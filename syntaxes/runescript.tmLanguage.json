{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "RuneScript",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#triggers"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line",
                    "match": "(//).*\\n?"
                },
                {
                    "name": "comment.block",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "comment": "Local variables",
                    "name": "variable.other.runescript",
                    "match": "\\$\\w+"
                },
                {
                    "comment": "Global variables",
                    "name": "variable.other.runescript",
                    "match": "\\%\\w+"
                },
                {
                    "comment": "Constants",
                    "name": "variable.other.enummember.runescript",
                    "match": "\\^\\w+"
                },
                {
                    "comment": "Boolean values",
                    "name": "variable.language.runescript",
                    "match": "\\b(true|false)\\b"
                },
                {
                    "comment": "Coord values",
                    "name": "constant.numeric.runescript",
                    "match": "\\b(\\d+_){4}\\d+\\b"
                },
                {
                    "comment": "Numeric values",
                    "name": "constant.numeric.runescript",
                    "match": "\\b\\d+\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.runescript",
                    "match": "\\b(if|while|for|return|else|case)\\b"
                },
                {
                    "name": "keyword.control.runescript",
                    "match": "\\b(switch_(int|string|boolean|seq|locshape|component|idk|midi|npc_mode|namedobj|synth|stat|npc_stat|fontmetrics|enum|loc|model|npc|obj|player_uid|spotanim|npc_uid|inv|category|struct|dbrow|interface|dbtable|coord|mesanim|param|queue|weakqueue|timer|softtimer|char|dbcolumn|proc|label))\\b"
                },
                {
                    "name": "variable.language.runescript",
                    "match": "\\b(def_(int|region_uid|string|boolean|seq|locshape|jingle|component|idk|midi|npc_mode|namedobj|synth|stat|npc_stat|fontmetrics|enum|loc|model|npc|obj|player_uid|spotanim|npc_uid|inv|category|struct|dbrow|interface|dbtable|coord|mesanim|param|queue|weakqueue|timer|softtimer|char|dbcolumn|proc|label))\\b"
                },
                {
                    "name": "variable.language.runescript",
                    "match": "\\bnull\\b"
                }
            ]
        },
        "triggers": {
            "patterns": [
                {
                    "comment": "Proc/label references",
                    "name": "entity.name.function.runescript",
                    "match": "[~@](\\.)?\\w+"
                },
                {
                    "comment": "Highlight the first half of [trigger,subject] blue",
                    "name": "variable.language.runescript",
                    "match": "\\[\\w+(?=,)"
                },
                {
                    "comment": "Highlight the second half of [trigger,subject] yellow",
                    "name": "entity.name.function.runescript",
                    "match": "(?<=,)(\\.)?\\w+(:\\w+)?\\]"
                },
                {
                    "comment": "Engine commands that are also function parameters",
                    "name": "entity.name.function.runescript",
                    "match": "\\b(queue|walktrigger|enum|softtimer|stat)\\("
                },
                {
                    "comment": "Function parameters",
                    "name": "variable.language.runescript",
                    "match": "\\b(coord\\)|queue|jingle|region_uid|walktrigger|enum|softtimer|stat|int|string|boolean|seq|locshape|component|idk|midi|npc_mode|namedobj|synth|npc_stat|fontmetrics|loc|model|npc|obj|player_uid|spotanim|npc_uid|inv|category|struct|dbrow|interface|dbtable|mesanim|param|char|dbcolumn|proc|label|timer|idkit|hunt)\\b"
                },
                {
                    "comment": "Function parameters (special case)",
                    "name": "variable.language.runescript",
                    "match": "\\bcoord "
                },
                {
                    "comment": "Engine commands",
                    "name": "entity.name.function.runescript",
                    "match": "\\b(gosub|region_create|region_translate|region_findbycoord|region_getcoord|region_set|region_setexitcoord|region_uid|if_setscroll|string_replace|inv_inserttoslot|gettimer|gettimespent|getqueue|getwalktrigger|getbit_range|gender|jump|map_clock|map_members|map_multiway|map_playercount|map_production|map_blocked|map_indoors|map_locaddunsafe|map_lastclock|map_lastclientin|map_lastclientout|map_lastcleanup|map_lastworld|map_lastnpc|map_lastplayer|map_lastlogin|map_lastlogout|map_lastzone|map_lastbandwidthin|map_lastbandwidthout|map_findsquare|max|movecoord|modulo|mes|midi_song|midi_jingle|min|multiply|huntall|huntnext|healenergy|headicons_get|headicons_set|hint_coord|hint_stop|hint_npc|hint_player|npc_huntall|npc_huntnext|npc_heropoints|npc_hasop|npc_find|npc_finduid|npc_findall|npc_findallany|npc_findallzone|npc_findexact|npc_findhero|npc_findnext|npc_facesquare|npc_add|npc_anim|npc_attackrange|npc_arrivedelay|npc_category|npc_coord|npc_changetype|npc_del|npc_delay|npc_damage|npc_param|npc_queue|npc_range|npc_say|npc_sethunt|npc_sethuntmode|npc_setmode|npc_settimer|npc_stat|npc_statadd|npc_statheal|npc_statsub|npc_basestat|npc_type|npc_tele|npc_name|npc_uid|npc_getmode|npc_walk|npc_walktrigger|npccount|name|nc_name|nc_param|nc_category|nc_desc|nc_debugname|nc_op|inzone|inv_allstock|inv_add|inv_size|inv_stockbase|inv_stoptransmit|inv_setslot|inv_changeslot|inv_clear|inv_del|inv_delslot|inv_debugname|inv_dropitem|inv_dropslot|inv_dropall|inv_freespace|inv_getnum|inv_getobj|inv_itemspace|inv_itemspace2|inv_movefromslot|inv_movetoslot|inv_moveitem|inv_moveitem_cert|inv_moveitem_uncert|inv_total|inv_totalcat|inv_transmit|invother_transmit|invpow|interpolate|if_close|if_setcolour|if_sethide|if_setobject|if_setmodel|if_setrecol|if_setresumebuttons|if_setanim|if_settab|if_settabactive|if_settext|if_setplayerhead|if_setposition|if_setnpchead|if_openchat|if_openmain|if_openmain_side|if_openside|lineofwalk|lineofsight|loccount|loc_add|loc_angle|loc_anim|loc_category|loc_change|loc_coord|loc_del|loc_find|loc_findallzone|loc_findnext|loc_param|loc_type|loc_name|loc_shape|loggedout|longqueue|lowmemory|lowercase|last_com|last_int|last_item|last_slot|last_useitem|last_useslot|last_login_info|last_targetslot|lc_name|lc_param|lc_category|lc_desc|lc_debugname|lc_width|lc_length|stat|stat_random|stat_base|stat_add|stat_advance|stat_sub|stat_heal|staffmodlevel|struct_param|strongqueue|string_length|string_indexof_char|string_indexof_string|spotanim_map|spotanim_pl|spotanim_npc|split_init|split_pagecount|split_get|split_getanim|split_linecount|seqlength|settimer|setidkit|setgender|setskincolour|setbit|setbit_range|setbit_range_toint|session_log|say|sound_synth|softtimer|sub|substring|scale|sin_deg|distance|displayname|divide|damage|db_find|db_find_with_count|db_find_refine|db_find_refine_with_count|db_findnext|db_findbyindex|db_getfield|db_getfieldcount|db_getrowtable|db_listall|db_listall_with_count|coord|coordx|coordy|coordz|compare|cos_deg|console|cam_moveto|cam_lookat|cam_shake|cam_reset|clearsofttimer|cleartimer|clearqueue|clearbit|clearbit_range|playercount|player_findallzone|player_findnext|projanim_pl|projanim_npc|projanim_map|p_finduid|p_aprange|p_arrivedelay|p_animprotect|p_countdialog|p_clearpendingaction|p_delay|p_opheld|p_oploc|p_opnpc|p_opnpct|p_opobj|p_opplayer|p_opplayert|p_pausebutton|p_stopaction|p_telejump|p_teleport|p_walk|p_logout|p_locmerge|p_exactmove|p_run|pow|world_delay|weakqueue|wealth_log|weight|walktrigger|zonecount|objcount|obj_add|obj_addall|obj_param|obj_name|obj_del|obj_count|obj_coord|obj_type|obj_takeitem|obj_find|oc_name|oc_param|oc_category|oc_cost|oc_cert|oc_desc|oc_debugname|oc_members|oc_weight|oc_wearpos|oc_wearpos2|oc_wearpos3|oc_tradeable|oc_uncert|oc_stackable|or|finduid|findhero|facesquare|anim|and|allowdesign|afk_event|append|append_num|append_signnum|append_char|add|addpercent|atan2_deg|abs|buffer_full|buildappearance|busy|busy2|bas_readyanim|bas_running|bas_turnonspot|bas_walk_f|bas_walk_b|bas_walk_l|bas_walk_r|both_heropoints|both_moveinv|both_dropslot|bitcount|uid|tut_open|tut_close|tut_flash|text_gender|testbit|tostring|togglebit|timespent|queue|runenergy|random|randominc|enum|enum_getoutputcount|error|calc)\\b"
                },
                {
                    "comment": "Any other properties",
                    "name": "variable.other.property.runescript",
                    "match": "[\\w:]+"
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.runescript",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.runescript",
                    "match": "\\\\."
                },
                {
                    "include": "#interpolation"
                }
            ]
        },
        "interpolation": {
            "begin": "<",
            "end": ">",
            "name": "entity.name.function.runescript",
            "patterns": [
                {
                    "comment": "mesanim definitions in strings",
                    "name": "entity.name.function.runescript",
                    "match": "p,\\w+"
                },
                {
                    "comment": "Use this (runescript) tmlanguage definition for code in the <> blocks in strings",
                    "include": "$self"
                },
                {
                    "comment": "Default coloring for closing pairs",
                    "name": "meta.embedded",
                    "match": "[(){}\\.,]"
                }
            ]
        }
    },
    "scopeName": "source.runescript"
}
